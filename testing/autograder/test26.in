# Test the find command when it finds commits that are no longer on any branch.
> init
<<<
D DATE "\d\d\d\d-\d\d-\d\d\s+\d\d:\d\d:\d\d"
D COMMIT_HEAD "Commit ([a-f0-9]+)[ \t]*\n${DATE}"
D COMMIT_LOG "(===[ ]*\nCommit [a-f0-9]+[ ]*\n${DATE}[ ]*\n(?:.|\n)*?(?=\Z|\n===))"
D ARBLINE "[^\n]*(?=\n|\Z)"
D ARBLINES "(?:(?:.|\n)*(?:\n|\Z)|\A|\Z)"
+ f.txt wug.txt
+ g.txt notwug.txt
> add g.txt
<<<
> add f.txt
<<<
> commit "Two files"
<<<
> rm f.txt
<<<
> commit "Remove one file"
<<<
> log
===
${COMMIT_HEAD}
Remove one file

===
${COMMIT_HEAD}
Two files

===
${COMMIT_HEAD}
initial commit

<<<
# UID of initial version
D UID1 "${3}"
# UID of second version
D UID2 "${2}"
# UID of third version
D UID3 "${1}"
> reset ${2}
<<<
> find "Remove one file"
${UID3}
<<<